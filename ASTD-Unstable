_G.settingsTable = {
	autoFarming = false
}

local filename = "astd-unstable-settings.json"

function loadSettings()
    print('Loading settings...')
    local HttpService = game:GetService("HttpService")
    if (readfile and isfile and isfile(filename)) then -- Checa se o exploit tem capacidade pra fazer isso
        _G.settingsTable = HttpService:JSONDecode(readfile(filename))
        print('Settings loaded')
    end
end

loadSettings()

function saveSettings()
	local json
	local HttpService = game:GetService("HttpService")
	if (writefile) then
		json = HttpService:JSONEncode(_G.settingsTable)
		writefile(filename, json)
        print("Saved settings.")
    else
        print("Ocurred an issue when saving the settings.")
	end
end


local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/brunocssouza/RobloxScripts/main/ASTD-UnstableUI"))()
local venyx = library.new("All Star Tower Defense (Unstable Version)")
local themes = {
Background = Color3.fromRGB(14, 14, 14),
Glow = Color3.fromRGB(255, 0, 0),
Accent = Color3.fromRGB(227, 12, 12),
LightContrast = Color3.fromRGB(108, 43, 43),
DarkContrast = Color3.fromRGB(44, 21, 21),  
TextColor = Color3.fromRGB(255, 255, 255)
}
local page = venyx:addPage("EVENT", 5012544693)
local section1 = page:addSection("Halloween Event")
local section2 = page:addSection("Section 2")
print("olha")

section1:addToggle("Farming 2", nil, function(bool)
print("O Farming 2 esta ", bool)
_G.settingsTable.autoFarming = bool
saveSettings()
if _G.settingsTable.autoFarming then
	function Spawn(unit)
	local args = {
	[1] = "SpawnAllyODD",
	[2] = unit
	}
	game:GetService("ReplicatedStorage").Remotes.Server:InvokeServer(unpack(args))
	end

	function Critical()
	local args = {
		[1] = "Critical"
	}
	game:GetService("ReplicatedStorage").Remotes.Oddessey:FireServer(unpack(args))
	wait(1)
	end

	getgenv().player = game.Players.LocalPlayer
	getgenv().playerHead = player.Character.Head

	if game.Workspace:FindFirstChild("Queue") then
		firetouchinterest(playerHead, game.Workspace.Queue.Sacri.ExamDoor, 0)
		wait(0.1)
		firetouchinterest(playerHead, game.Workspace.Queue.Sacri.ExamDoor, 1)
	else
		Spawn(Unidade1)
		Spawn(Unidade2)
		Spawn(Unidade3)
	while wait() do
		Critical()
	end
end
end)

section1:addButton("Start Farming", function()
print("Clicked")
end)
section1:addTextbox("Notification", "Default", function(value, focusLost)
print("Input", value)
if focusLost then
venyx:Notify("Title", value)
end
end)
section1:addKeybind("Toggle Keybind", Enum.KeyCode.One, function()
print("Activated Keybind")
venyx:toggle()
end, function()
print("Changed Keybind")
end)
section2:addColorPicker("ColorPicker", Color3.fromRGB(50, 50, 50))
section2:addColorPicker("ColorPicker2")
section2:addSlider("Slider", 0, -100, 100, function(value)
print("Dragged", value)
end)
section2:addDropdown("Dropdown", {"Hello", "World", "Hello World", "Word", 1, 2, 3})
section2:addDropdown("Dropdown", {"Hello", "World", "Hello World", "Word", 1, 2, 3}, function(text)
print("Selected", text)
end)
section2:addButton("Button")
venyx:SelectPage(venyx.pages[1], true)
